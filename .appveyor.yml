image:
  - Visual Studio 2015
  - Visual Studio 2017

clone_depth: 10

platform:
  - x86
  - x64

environment:
  global:
    CYGWIN_DIR: C:\cygwin64
    CYGWIN_BASH: C:\cygwin64\bin\bash
    MSYS2_DIR: C:\msys64
    MSYS2_BASH: C:\msys64\usr\bin\bash.exe

  matrix:
    - BUILD_ENV: MSVC

    - BUILD_ENV: CYGWIN
      COMPILER: gcc

    - BUILD_ENV: CYGWIN
      COMPILER: clang

    - BUILD_ENV: MSYS2
      COMPILER: mingw-gcc

matrix:
  exclude:
    - image: Visual Studio 2015
      BUILD_ENV: CYGWIN

    - image: Visual Studio 2015
      BUILD_ENV: MSYS2

    - platform: x86
      BUILD_ENV: CYGWIN
      COMPILER: clang

for:
  - matrix:
      only:
        - image: Visual Studio 2015
          platform: x86
          BUILD_ENV: MSVC
    before_build:
      - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
    build_script:
      - md build
      - cd build
      - cmake -G "NMake Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=../install ..
      - cmake --build . --target install

  - matrix:
      only:
        - image: Visual Studio 2015
          platform: x64
          BUILD_ENV: MSVC
    before_build:
      - call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
      - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64
    build_script:
      - md build
      - cd build
      - cmake -G "NMake Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=../install ..
      - cmake --build . --target install

  - matrix:
      only:
        - image: Visual Studio 2017
          platform: x86
          BUILD_ENV: MSVC
    before_build:
      - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
    build_script:
      - md build
      - cd build
      - cmake -G "NMake Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=../install ..
      - cmake --build . --target install

  - matrix:
      only:
        - image: Visual Studio 2017
          platform: x64
          BUILD_ENV: MSVC
    before_build:
      - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
    build_script:
      - md build
      - cd build
      - cmake -G "NMake Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=../install ..
      - cmake --build . --target install

  - matrix:
      only:
        - BUILD_ENV: CYGWIN
    cache:
      - '%CYGWIN_DIR%\var\cache\setup'
    install:
      - '%CYGWIN_DIR%\setup-x86_64.exe --wait --quiet-mode --no-shortcuts --upgrade-also --packages cmake,clang,cygwin32-gcc-g++'
      - '%CYGWIN_DIR%\bin\cygcheck.exe -c'
    before_build:
      - ps: >-
          if (($env:PLATFORM -eq 'x86') -and ($env:COMPILER -eq 'gcc'))
          {
            [Environment]::SetEnvironmentVariable('CC', 'i686-pc-cygwin-gcc', 'machine')
          }
          elseif (($env:PLATFORM -eq 'x64') -and ($env:COMPILER -eq 'gcc'))
          {
            [Environment]::SetEnvironmentVariable('CC', 'gcc', 'machine')
          }
          elseif (($env:PLATFORM -eq 'x64') -and ($env:COMPILER -eq 'clang'))
          {
            [Environment]::SetEnvironmentVariable('CC', 'clang', 'machine')
          }
      - refreshenv
      - ps: Write-Output "Using CC=${env:CC}"
    build_script:
      - md build
      - '%CYGWIN_BASH% -e -l -c "cd $APPVEYOR_BUILD_FOLDER/build && cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX:PATH=../install .."'
      - '%CYGWIN_BASH% -e -l -c "cd $APPVEYOR_BUILD_FOLDER/build && cmake --build . --target install"'

  - matrix:
      only:
        - BUILD_ENV: MSYS2
    cache:
      - '%MSYS2_DIR%\var\cache\pacman'
    install:
      - # Fix MSYS2 signature problem - see https://www.msys2.org/news/#2020-06-29-new-packagers
      - '%MSYS2_BASH% --login -c "curl -O http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz && curl -O http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig"'
      - '%MSYS2_BASH% --login -c "pacman-key --verify msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig && pacman -U --noconfirm msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz"'
      - '%MSYS2_BASH% --login -c "pacman -Syuu --noconfirm"'

      # Avoid crash in bash: "shared_info::initialize: size of shared memory region changed from 49080 to 40888"
      # See https://github.com/msys2/MSYS2-packages/issues/258#issuecomment-665469576
      - ps: Get-Process | Where-Object { $_.Path -like "${env:MSYS2_DIR}*" } | Stop-Process

      - '%MSYS2_BASH% --login -c "pacman -Syuu --noconfirm"'
      - '%MSYS2_BASH% --login -c "pacman -S --noconfirm mingw-w64-x86_64-toolchain"'
      - '%MSYS2_BASH% --login -c "pacman -S --noconfirm mingw-w64-i686-toolchain"'
    before_build:
      - ps: >-
          if (($env:PLATFORM -eq 'x86') -and ($env:COMPILER -eq 'mingw-gcc'))
          {
            [Environment]::SetEnvironmentVariable('MSYSTEM', 'MINGW32', 'machine')
            [Environment]::SetEnvironmentVariable('CC', '/mingw32/bin/gcc', 'machine')
          }
          elseif (($env:PLATFORM -eq 'x64') -and ($env:COMPILER -eq 'mingw-gcc'))
          {
            [Environment]::SetEnvironmentVariable('MSYSTEM', 'MINGW64', 'machine')
            [Environment]::SetEnvironmentVariable('CC', '/mingw64/bin/gcc', 'machine')
          }
      - refreshenv
      - ps: Write-Output "Using CC=${env:CC}"
    build_script:
      - md build
      - '%MSYS2_BASH% -e -l -c "cd $APPVEYOR_BUILD_FOLDER/build && cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX:PATH=../install .."'
      - '%MSYS2_BASH% -e -l -c "cd $APPVEYOR_BUILD_FOLDER/build && cmake --build . --target install"'

# https://www.appveyor.com/docs/how-to/rdp-to-build-worker/
on_failure:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
